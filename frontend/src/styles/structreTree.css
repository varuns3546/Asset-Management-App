.hierarchy-tree {
    background: white;
    border-radius: 8px;
    border: 1px solid #dee2e6;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.tree-controls {
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border-bottom: 2px solid #e0e0e0;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.zoom-controls {
    display: flex;
    align-items: center;
    gap: 10px;
}

.zoom-button {
    background: #007bff;
    color: white;
    border: 1px solid #007bff;
    padding: 6px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    font-weight: 500;
    transition: all 0.2s ease;
    min-width: 32px;
}

.zoom-button:hover:not(:disabled) {
    background: #0056b3;
    border-color: #0056b3;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.zoom-button:disabled {
    background: #6c757d;
    border-color: #6c757d;
    cursor: not-allowed;
    opacity: 0.6;
}

.zoom-level {
    font-size: 14px;
    font-weight: 500;
    color: #333;
    min-width: 40px;
    text-align: center;
}

.reset-zoom-button {
    background: #007bff;
    color: white;
    border: 1px solid #007bff;
    padding: 6px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 12px;
    font-weight: 500;
    transition: all 0.2s ease;
}

.reset-zoom-button:hover {
    background: #0056b3;
    border-color: #0056b3;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.tree-toggle-button {
    background: #007bff;
    color: white;
    border: 1px solid #007bff;
    padding: 8px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.2s ease;
    min-width: 40px;
}

.tree-toggle-button:hover {
    background: #0056b3;
    border-color: #0056b3;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Scroll wrapper for tree content */
.tree-scroll-wrapper {
    width: 100%;
    height: 100%;
    overflow: auto;
    position: relative;
}

/* Add CSS custom properties support to tree-content */
.tree-content {
    padding: 20px;
    position: relative;
    /* Default values that will be overridden by JavaScript */
    --node-min-width: 120px;
    --node-gap: 18px;
    --node-padding: 8px;
    --node-font-size: 14px;
    --vertical-gap: 20px;
    /* Allow content to expand beyond normal bounds when scaled */
    transform-origin: top left;
    box-sizing: border-box;
    /* Ensure content can expand beyond container */
    min-width: max-content;
    min-height: max-content;
    /* Remove any transitions for instant zoom */
    transition: none !important;
    -webkit-transition: none !important;
    -moz-transition: none !important;
    -o-transition: none !important;
    /* Specifically disable transform transitions */
    transition-property: none !important;
    -webkit-transition-property: none !important;
}

/* Force immediate zoom without any transitions */
.tree-content * {
    transition: none !important;
    -webkit-transition: none !important;
    -moz-transition: none !important;
    -o-transition: none !important;
}

/* Update horizontal-children to use dynamic gap */
.horizontal-children {
    display: flex;
    flex-wrap: wrap;
    margin-left: 0;
    margin-top: 10px;
    gap: var(--node-gap); /* Use dynamic gap instead of fixed 10px */
    position: relative;
    /* Add a bit more horizontal spacing between parent nodes */
    column-gap: calc(var(--node-gap) + 5px); /* Extra 5px horizontal spacing */
    /* Use full available width */
    width: 100%;
    justify-content: flex-start;
}

/* Update horizontal-node to use dynamic spacing */
.horizontal-node {
    top: 5px;
    display: inline-block;
    margin-right: 0; /* Remove fixed margin, use gap instead */
    margin-bottom: var(--node-gap); /* Use dynamic spacing */
    vertical-align: top;
    position: relative;
}

/* Vertical lines pointing to each child */
.horizontal-node::before {
    content: '';
    position: absolute;
    margin-top: -5px;
    left: 50%;
    width: 2px;
    height: 5px;
    background-color: #6c757d;
    z-index: 1;
    display: block;
}

/* Hide vertical lines for single children */
.horizontal-children:not(:has(.horizontal-node:nth-child(2))) .horizontal-node::before {
    display: none;
}

/* Hide vertical lines for root nodes (nodes without parent) */
.tree-content > .horizontal-node::before {
    display: none;
}

/* Update node-content to use dynamic values */
.node-content {
    display: flex;
    align-items: center;
    padding: var(--node-padding) calc(var(--node-padding) * 1.5); /* Dynamic padding */
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border: 1px solid #dee2e6;
    border-radius: 8px;
    transition: all 0.2s ease;
    min-width: var(--node-min-width); /* Dynamic min-width */
    justify-content: space-between;
    position: relative;
    z-index: 2;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.node-content::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    width: 2px;
    height: 10px;
    background-color: #6c757d;
    z-index: 1;
    display: none;
}

/* Show vertical line from parent only if it has children */
.horizontal-node:has(.horizontal-children) .node-content::after {
    display: block;
}

/* Hide vertical line for nodes without children */
.horizontal-node:not(:has(.horizontal-children)) .node-content::after {
    display: none !important;
}

.node-content:hover {
    background: #e9ecef;
}

/* Update node-title to use dynamic font size */
.node-title {
    font-weight: 500;
    color: #333;
    font-size: var(--node-font-size); /* Dynamic font size */
    flex: 1;
}

.has-children-indicator {
    color: #6c757d;
    font-size: 12px;
    margin-left: 8px;
}

.children {
    margin-left: 20px;
    margin-top: 5px;
}

.horizontal-children {
    display: flex;
    flex-wrap: wrap;
    margin-left: 0;
    margin-top: 10px;
    gap: 10px;
    position: relative;
}

.horizontal-children::before {
    content: '';
    position: absolute;
    top: -1px;
    left: 20px;
    right: 20px;
    height: 2px;
    background-color: #6c757d;
    z-index: 1;
    display: none;
}

.horizontal-children::after {
    content: '';
    position: absolute;
    top: -15px;
    left: 50%;
    width: 2px;
    height: 8px;
    padding-bottom: 3px;
    background-color: #6c757d;
    z-index: 1;
}

/* Show horizontal line only if there are multiple children */
.horizontal-children:has(.horizontal-node:nth-child(2))::before {
    display: block;
}

.no-hierarchy {
    text-align: center;
    padding: 40px 20px;
    color: #666;
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border-radius: 8px;
    border: 2px dashed #dee2e6;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.no-hierarchy p {
    margin: 0;
    font-size: 1rem;
}

/* Tree Structure Styling */
.tree-node:last-child {
    margin-bottom: 0;
}

/* Responsive Design */
@media (max-width: 768px) {
    .tree-controls {
        padding: 12px 15px;
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .zoom-controls {
        width: 100%;
        justify-content: space-between;
    }
    
    .tree-content {
        padding: 15px;
        max-height: 60vh;
    }
    
    .node-content {
        padding: 6px 10px;
    }
    
    .node-title {
        font-size: 13px;
    }
    
    .children {
        margin-left: 15px;
    }
    
    .horizontal-node {
        display: block;
        margin-right: 0;
        margin-bottom: 10px;
    }
    
    .horizontal-children {
        display: block;
        gap: 0;
    }
    
    .node-content {
        min-width: auto;
    }
}